:root {
  --border-color: #515151;
  --padding-left: 0px;
  --grid-width: calc(420px + 6em);
  --box-size: 60px;
}

html, body, * {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
  font-family: Arial, sans-serif;
}

header {
  background-color: #494949;
  color: white;
  padding: 10px;
  text-align: center;
  font-size: 3em;
  position: fixed;
  width: 100%;
}

.loading-overlay {
  position: fixed;
  z-index: 100;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(0, 0, 0, 0.5);
}

.loading-overlay.hidden {
  display: none;
}

.loading {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  background-color: #ffffff;
  padding: 2em;
  font-size: 2em;
  color: #494949;
  border-radius: 10px;
  box-shadow: 0 3px 5px 0 rgba(0, 0, 0, 0.5);

}

button.calculate {
  height: 60px;
  width: 75%;
  max-width: 300px;
  font-size: 1em;
}

button.calculate, button.resize {
  border: none;
  background-color: #494949;
  color: white;
  padding: 1em;
  border-radius: 10px;
  margin: 0 auto;
  display: block;
  transition: all 0.1s ease-in-out;
  box-shadow: 0 3px 5px 0 rgba(0, 0, 0, 0.5);
}

button.calculate:hover, button.resize:hover {
  cursor: pointer;
  background-color: rgb(46, 174, 46);
  transform: scale(1.08);
}

button.calculate:active, button.resize:active {
  transform: scale(1);
  background-color: rgb(32, 113, 32);
}

.wrap {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100vh;

}

.content-grid-wrapper {
  display: grid;
  grid-template-columns: 1fr 1fr;
  max-width: 1000px;
  /* position items in the center of the cells */
  justify-content: center;
  align-items: center;
  padding: 1em;
}

.grid {
  /* make this take up three rows in grid */
  grid-row: 1 / span 3;
  display: flex;
  flex-direction: column;
  max-width: var(--grid-width);
  margin: 0 auto;
  padding: 0 1em;
  padding: 3em;
  box-shadow: 0 3px 5px 0 rgba(0, 0, 0, 0.5);
  border-radius: 10px;
  position: relative;
}

.flex-row-container, .flex-row-container-button {
  display: flex;
  justify-content: left;
  align-items: center;
}

.flex-row-container {
  padding-left: var(--padding-left);
}

.flex-row-container-button {
  padding-left: calc(60px + var(--padding-left));
}

.grid-box {
  border: 1px solid var(--border-color);
  height: var(--box-size); /* 60px, changes with grid size */
  width:  var(--box-size); /* 60px, changes with grid size */
  transition: background-color 0.1s ease-in-out;
}

.grid-box:hover:not(.roomba):not(.occupied) {
  background-color: #f0f0f0;
}

/* ================ OLD PATH ANIMATION AND STYLING ================ */
/* .grid-box.path {
  create an animation to transition background color from light red to dark red
  animation: path 1.5s forwards alternate;
}

@keyframes path {
  0% {
    background-color: #ffcccc;
  }

  100% {
    background-color: #ff6666;
  }
} */

/* ================================== PATH LINE EXPERIMENT STARTS HERE ================================== */
.path {
  background-color: red;
  height: 5px;
  width: 5px;
  opacity: .45;
}

.path.grow-up {
  animation: grow-up linear .75s forwards;
}

.path.grow-left {
  animation: grow-left linear .75s forwards;
}

.path.grow-right {
  animation: grow-right linear .75s forwards;
}

.path.grow-down {
  animation: grow-down linear .75s forwards;
}

@keyframes grow-right {
  0% {
    width: 1px;
  }

  100% {
    width: var(--box-size);
  }
}

@keyframes grow-left {
  0% {
     /* End position */

    width: 1px;
  }

  100% {
    transform: translateX(calc(-1 * var(--box-size))); /* Start position */

    width: var(--box-size);
  }
}

@keyframes grow-up {
  0% {
    height: 1px;
    transform: translateY(0); /* Start position */
  }

  100% {
    height: var(--box-size);
    transform: translateY(calc(-1 * var(--box-size))); /* End position */
  }
}

@keyframes grow-down {
  0% {
    height: 1px;
  }

  100% {
    height: var(--box-size);
  }
}

/* ================================== PATH LINE EXPERIMENT ENDS HERE ================================== */



.right {
  border-right: 2px solid var(--border-color);
}

.left {
  border-left: 2px solid var(--border-color);
}

.top {
  border-top: 2px solid var(--border-color);
}

.bottom {
  border-bottom: 2px solid var(--border-color);
}

.occupied {
  background-color: #adadad;
}

.roomba {
  background-color: #dcda4f;
}

.roomba:hover {
  cursor: grab;
}

.roomba:active {
  cursor: grabbing;
}

.roomba.dragging {
  opacity: 0.5;
}

/* button.add-box {
  font-size: 1.2em;
  cursor: pointer;
  background-color: #f4f4f4;
  border: solid 1px #afafaf;
  user-select: none;
  transition: color .2s ease-in-out, background-color .2s ease-in-out, font-size .2s ease-in-out;
}

button.add-box:hover {
  background-color: #797979;
  color: white;
} */

.instructions {
  max-width: calc(300px + 6em);
  margin: 0 1em;
  padding: 2em;
  border-radius: 10px;
  box-shadow: 0 3px 5px 0 rgba(0, 0, 0, 0.5);
  justify-self: center;
}

.grid-size-selector {
  
  margin: 1em 0;
  box-shadow: 0 3px 5px 0 rgba(0, 0, 0, 0.5);
  border-radius: 10px;
  
  width: calc(300px + 6em);
  justify-self: center;
}

.flex-size-container {
  display: flex;
  padding: 1em 2em 1em 3em;
}

.flex-label-container {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  align-items: left;
}

.rows, .cols {
  display: flex;
  justify-content: space-between;
  gap: 10px;
}

.hidden {
  display: none;
}

.error-message {
  color: rgb(215, 57, 57);
  font-size: .8em;
  margin-bottom: .5em;
  text-align: center;
}

/* Breakpoint for screen size less than 600 pixels */
@media (max-width: 600px) {
  .grid, .instructions {
    max-width: calc(calc(10vw * 5) + 6em);
    text-align: center;
  }

  .instructions, button, .grid {
    margin: 1em auto;
  }

  .grid-box {
    height: 10vw;
    width: 10vw;
  }

  .content-grid-wrapper {
    grid-template-columns: 1fr;
    margin-top: 2em;
  }
}